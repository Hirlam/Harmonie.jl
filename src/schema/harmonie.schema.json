{
  "$id": "./schema/harmonie.schema.json",
  "$schema" : "http://json-schema.org/schema#",
  "title": "Harmonie experiment configuration",
  "description" : "See Surfex and Observations tabs for examples. Observations.LISTE_LOC[].obstype shows how enum_titles can be used to give meaningful names to integers. Geometry.DOMAIN shows how we can insert value directly in the config_exp.json. Surfex.Namelist shows how namelist information can be included in the gui. All of this could help to reduce the dependency on perl in the scripts. ",
  "options": {
    "disable_properties": false,
    "disable_edit_json": false,
    "disable_collapse": true
  },
  "format": "categories",
  "type": "object",
  "additionalProperties": false,
  "required": [   
    "Times", 
    "Geometry",
    "Nesting",
    "Assimilation",
    "DFI",
    "Physics",
    "Surfex",    
    "EDA",
    "Postprocessing",
    "Archiving",
    "System",
    "Paths",
    "Aux",
    "Build"    
  ],
  "properties": {  
    "$schema" : {
      "type" : "string" 
    },
    "Geometry": {
      "$ref": "geometry/geometry.schema.json"
    },
    "Nesting": {
      "$ref": "nesting/nesting.schema.json"
    },
    "Assimilation": {
      "$ref": "assimilation/assimilation.schema.json"
    },
    "DFI" : {
      "$ref" : "dfi/dfi.schema.json"
    },
    "Physics": {
      "$ref": "physics/physics.schema.json"
    },
    "Surfex": {
      "$ref": "surfex/surfex.schema.json"
    },
    "Observations": {
      "$ref": "observations/observations.schema.json"
    },    
    "EDA" : {
      "$ref": "eda/eda.schema.json"
    },
    "Postprocessing": {
      "$ref" : "postprocessing/postprocessing.schema.json"
    },
    "Archiving": {
      "$ref": "archiving/archiving.schema.json"
    },
    "System": {
      "$ref": "system/system.schema.json"
    },
    "Paths": {
      "$ref": "main/paths.schema.json"   
    },
    "Aux" : {
      "$ref": "aux/aux.schema.json"
    },
    "Times"  : { 
      "$ref" : "main/timelists.schema.json"
    },
    "Build" : {
      "$ref" : "build/build.schema.json"
    }    
  }
}
